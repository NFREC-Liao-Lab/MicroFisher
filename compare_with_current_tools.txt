#############################################################################################
##part 1: pre-process  the sequences from metatranscriptomic and metagenomic dataset
#quality control for the fastq sequences
##############################################################################################
fastqc rawdata/*.gz -t 20 -o fastqc_rawdata


for i in rawdata/*_R1.fastq.gz; do
   basename=$(basename "$i" _R1.fastq.gz)
   echo $basename
   if [ ! -f cleandata/${basename}_R2_val_2.fq.gz ]; then
     trim_galore -q 25 --phred33 --stringency 3 --length 110 \
               --paired rawdata/${basename}_R1.fastq.gz    rawdata/${basename}_R2.fastq.gz \
               --gzip \
               --cores 24 \
               -o cleandata 
   fi
done

############################################################################################
##Part 2: fungal classification using metaphlan and kaiju
#https://github.com/biobakery/biobakery/wiki/metaphlan3
#https://github.com/biobakery/MetaPhlAn/wiki/MetaPhlAn-3.0
for i in cleandata/*_R1_val_1.fq.gz; do
    basename=$(basename  "$i" _R1_val_1.fq.gz)
    echo $basename
    if [ ! -f classification/${basename}_metaphlan.profile.txt ]; then
      metaphlan cleandata/${basename}_R1_val_1.fq.gz,cleandata/${basename}_R2_val_2.fq.gz  \
             --input_type fastq  --bowtie2out classification/${basename}_metaphlan.bowtie2.bz2  \
             --nproc 24 -o classification/${basename}_metaphlan.profile.txt
    fi
done

#https://github.com/bioinformatics-centre/kaiju/blob/master/README.md
for i in cleandata/*_R1_val_1.fq.gz; do
    basename=$(basename  "$i" _R1_val_1.fq.gz)
    echo $basename
    if [ ! -f classification/${basename}_kaiju.out ]; then
      kaiju -t database/kaiju/nodes.dmp -f database/kaiju/fungi/kaiju_db_fungi.fmi \
            -i cleandata/${basename}_R1_val_1.fq.gz -j cleandata/${basename}_R2_val_2.fq.gz  \
            -o classification/${basename}_kaiju.out -z 24
    fi
    
    if [ ! -f classification/${basename}_kaiju_summary.tsv ]; then
      kaiju2table -t database/kaiju/nodes.dmp \
                -n database/kaiju/names.dmp -r genus \
                -o classification/${basename}_kaiju_summary.tsv classification/${basename}_kaiju.out \
                -l superkingdom,phylum,class,order,family,genus,species
    fi
done

###########################################################################################
#Part3:#eukdetect





###########################################################################################
#Part4: MicroFfisher

MicroFisher_DBs=/home/microbiome/data_storage/SATA2/Fisher_test/short_DBs/MicroFisher_DBs

for i in cleandata/*_R1.fastq.gz; do
    basename=$(basename  "$i" _R1.fastq.gz)
    echo $basename
    mkdir MicroFisher/${basename}_microfisher
    cp cleandata/${basename}_* MicroFisher/${basename}_microfisher
    
    for DB_cat in  ITS1 ITS2 LsuD1 LsuD2 ; do
                   if [ "$DB_cat" = "ITS1" ]; then
                       DB=ITS1_fisher
                     elif [ "$DB_cat" = "ITS2" ]; then
                       DB=ITS2_fisher
                     elif [ "$DB_cat" = "LsuD1" ]; then
                       DB=LSU_D1_fisher_new
                     elif [ "$DB_cat" = "LsuD2" ]; then
                       DB=LSU_D2_fisher_new
                    fi
                   echo $DB
                   python /home/microbiome/data_storage/SATA2/Fisher_test/MicroFisher/MicroFisher-Fungal-Profiling/python/MicroFisher.py  search -vv  \
                               -w MicroFisher/${basename}_microfisher  \
                               --db_path $MicroFisher_DBs \
                               --prefix $basename \
                               --min 120 --db $DB
      done
      
      
      cd MicroFisher/${basename}_microfisher
      python  /home/microbiome/data_storage/SATA2/Fisher_test/MicroFisher/MicroFisher-Fungal-Profiling/python/run_merge_reports.py  \
                    --combine result_${basename}_min120_dbITS1_fisher_report.tsv \
                              result_${basename}_min120_dbITS2_fisher_report.tsv \
                    --mode weighted
      for i in merged_output_* ; do
          name=$(basename $i .tsv)
          mv $i ${name}.ITS.min120.tsv
      done
             
      python  /home/microbiome/data_storage/SATA2/Fisher_test/MicroFisher/MicroFisher-Fungal-Profiling/python/run_merge_reports.py  \
                    --combine result_${basename}_min120_dbLSU_D1_fisher_new_report.tsv \
                              result_${basename}_min120_dbLSU_D2_fisher_new_report.tsv \
                    --mode weighted
       for i in merged_output_* ; do
          name=$(basename $i .tsv)
          mv $i ${name}.LSU.min120.tsv
      done
                   
      python  /home/microbiome/data_storage/SATA2/Fisher_test/MicroFisher/MicroFisher-Fungal-Profiling/python/run_merge_reports.py  \
                    --combine result_${basename}_min120_dbLSU_D1_fisher_new_report.tsv \
                              result_${basename}_min120_dbLSU_D2_fisher_new_report.tsv \
                              result_${basename}_min120_dbITS1_fisher_report.tsv \
                              result_${basename}_min120_dbITS2_fisher_report.tsv \
                    --mode weighted
       for i in merged_output_* ; do
          name=$(basename $i .tsv)
          mv $i ${name}.ITS_LSU.min120.tsv
      done
      
      cd /home/microbiome/data_storage/SATA2/metagenome_data/
      
      
      
      
      for DB_cat in  ITS1 ITS2 LsuD1 LsuD2 ; do
                   if [ "$DB_cat" = "ITS1" ]; then
                       DB=ITS1_fisher
                     elif [ "$DB_cat" = "ITS2" ]; then
                       DB=ITS2_fisher
                     elif [ "$DB_cat" = "LsuD1" ]; then
                       DB=LSU_D1_fisher_new
                     elif [ "$DB_cat" = "LsuD2" ]; then
                       DB=LSU_D2_fisher_new
                    fi
                   echo $DB
                   python /home/microbiome/data_storage/SATA2/Fisher_test/MicroFisher/MicroFisher-Fungal-Profiling/python/MicroFisher.py  search -vv  \
                               -w MicroFisher/${basename}_microfisher  \
                               --db_path $MicroFisher_DBs \
                               --prefix $basename \
                               --min 80 --db $DB
      done
      
      
      cd MicroFisher/${basename}_microfisher
      python  /home/microbiome/data_storage/SATA2/Fisher_test/MicroFisher/MicroFisher-Fungal-Profiling/python/run_merge_reports.py  \
                    --combine result_${basename}_min80_dbITS1_fisher_report.tsv \
                              result_${basename}_min80_dbITS2_fisher_report.tsv \
                    --mode weighted
      for i in merged_output_* ; do
          name=$(basename $i .tsv)
          mv $i ${name}.ITS.min80.tsv
      done
             
      python  /home/microbiome/data_storage/SATA2/Fisher_test/MicroFisher/MicroFisher-Fungal-Profiling/python/run_merge_reports.py  \
                    --combine result_${basename}_min80_dbLSU_D1_fisher_new_report.tsv \
                              result_${basename}_min80_dbLSU_D2_fisher_new_report.tsv \
                    --mode weighted
       for i in merged_output_* ; do
          name=$(basename $i .tsv)
          mv $i ${name}.LSU.min80.tsv
      done
                   
      python  /home/microbiome/data_storage/SATA2/Fisher_test/MicroFisher/MicroFisher-Fungal-Profiling/python/run_merge_reports.py  \
                    --combine result_${basename}_min80_dbLSU_D1_fisher_new_report.tsv \
                              result_${basename}_min80_dbLSU_D2_fisher_new_report.tsv \
                              result_${basename}_min80_dbITS1_fisher_report.tsv \
                              result_${basename}_min80_dbITS2_fisher_report.tsv \
                    --mode weighted
       for i in merged_output_* ; do
          name=$(basename $i .tsv)
          mv $i ${name}.ITS_LSU.min80.tsv
      done
      
      cd /home/microbiome/data_storage/SATA2/metagenome_data/
done








###########################################################################################
#Part3: denovo assembly approach
for i in cleandata/*_R1_val_1.fq.gz; do
    basename=$(basename  "$i" _R1_val_1.fq.gz)
    echo $basename
    bowtie2 -x database/assemble/D1D2_ref -p 24 \
            -1 cleandata/${basename}_R1_val_1.fq.gz \
            -2 cleandata/${basename}_R2_val_2.fq.gz \
            -S deNovoAssemble/${basename}.sam \
            --al-conc-gz deNovoAssemble/${basename}_aligned.gz
    rm -f deNovoAssemble/${basename}.sam
done
    
    
    
    
    
    
    
    
    
